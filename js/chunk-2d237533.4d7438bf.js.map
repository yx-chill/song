{"version":3,"sources":["webpack:///./src/views/Genre.vue","webpack:///./src/views/Genre.vue?2b6d"],"names":["class","isNotExist","songs","song","key","id","to","style","image","src","alt","title","name","composer","genreId","router","getGenre","undefined","value","request","response","status","push","data","getGenreSongs","type","res","length","console","log","setup","route","params","defaultImg","__exports__","render"],"mappings":"oJACOA,MAAM,qB,SACLA,MAAM,sB,GACNA,MAAM,uE,GAICA,MAAM,sD,yBAORA,MAAM,iB,oFAbjB,eAiBM,MAjBN,EAiBM,CAhBiC,EAAAC,Y,iBAArC,eAAgE,KAAhE,EAAiD,e,sBACjD,eAcK,KAdL,EAcK,E,mBAbH,eAYK,2BAZc,EAAAC,OAAK,SAAbC,G,wBAAX,eAYK,MAZsBC,IAAKD,EAAKE,I,CACnC,eAUc,GAVAC,GAAE,4BAAoCH,EAAKE,KACvDL,MAAM,wD,yBACN,iBAKM,CALN,eAKM,MALN,EAKM,CAJJ,eAEiE,OAF5DA,MAAM,4CACRO,MAAK,gCAAoBJ,EAAKK,M,OAA+B,EAAK,MAAK,WAAkB,aAAU,O,QAEtG,eAA6E,OAAvEC,IAAKN,EAAKK,OAAS,EAAQ,QAA2BE,IAAI,c,YAElE,eAAmE,MAA/DV,MAAM,kBAAmBW,MAAOR,EAAKS,M,eAAST,EAAKS,MAAI,KAC3D,eAAgD,IAAhD,EAAgD,eAApBT,EAAKU,UAAQ,O,iGAgB7C,EAAiB,SAACC,GACtB,IAAMC,EAAS,iBACTC,EAAO,yDAAI,sGACOC,IAAlBH,EAAQI,MADG,0EAIP,OAAAC,EAAA,MAAQ,MAAD,wBAAyBL,EAAQI,QAJjC,0DAMe,MAAxB,KAAIE,SAASC,QACfN,EAAOO,KAAK,CAAEV,KAAM,aAPT,yDAAJ,qDAWb,OAAOI,GAIH,EAAsB,SAACF,GAC3B,IAAMS,EAAO,eAAS,CAAErB,MAAO,KACzBD,EAAa,gBAAI,GACjBuB,EAAY,yDAAI,2GACpB,iBADoB,kBAGA,OAAAL,EAAA,MAAQ,MAAO,WAAY,CAC3CM,KAAMX,EAAQI,QAJE,OAGZQ,EAHY,OAMlBH,EAAKrB,MAAQwB,EAAIH,KAAKA,KACtBtB,EAAWiB,OAASQ,EAAIH,KAAKA,KAAKI,OAPhB,mDASlBC,QAAQC,IAAR,MATkB,QAWpB,iBAXoB,yDAAJ,qDAalB,EAAkB,eAAON,GAAjBrB,EAAR,EAAQA,MAER,MAAO,CAAEsB,gBAAetB,QAAOD,eAGlB,GACbW,KAAM,QACNkB,MAFa,WAGX,IAAMC,EAAQ,iBACRjB,EAAU,gBAAS,kBAAMiB,EAAMC,OAAOlB,WAEtCmB,EAAa,EAAQ,QAErBjB,EAAW,EAAeF,GAChC,EAA6C,EAAoBA,GAAzDU,EAAR,EAAQA,cAAetB,EAAvB,EAAuBA,MAAOD,EAA9B,EAA8BA,WAU9B,OARAe,IACAQ,IAEA,eAAMV,GAAS,WACbE,IACAQ,OAGK,CACLtB,QAAOY,UAASb,aAAYgC,gB,qBCnFlC,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD","file":"js/chunk-2d237533.4d7438bf.js","sourcesContent":["<template>\n  <div class=\"p-5 text-gray-300\">\n    <h2 class=\"text-2xl font-bold\" v-if=\"isNotExist\">暫無此分類歌曲...</h2>\n    <ul class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-5\">\n      <li v-for=\"song in songs\" :key=\"song.id\">\n        <router-link :to=\"{ name: 'song', params: { songId: song.id } }\"\n          class=\"song block p-4 bg-gray-600 hover:bg-gray-500 rounded\">\n          <div class=\"aspect-w-1 aspect-h-1 rounded overflow-hidden mb-4\">\n            <div class=\"absolute inset-0 bg-center filter blur-xl\"\n              :style=\"{backgroundImage: song.image ?\n              'url(' + song.image + ')' : 'url(' + defaultImg + ')' }\"></div>\n            <img :src=\"song.image || require('@/assets/headphone.jpg')\" alt=\"song photo\">\n          </div>\n          <h2 class=\"text-white mb-2\" :title=\"song.name\">{{ song.name }}</h2>\n          <p class=\"text-gray-300\">{{ song.composer }}</p>\n        </router-link>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport {\n  computed, reactive, ref, toRefs, watch,\n} from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport request from '@/includes/request';\nimport { showLoading, hideLoading } from '@/composables/useLoading';\n\n// 檢查是否有該曲風\nconst handleGetGenre = (genreId) => {\n  const router = useRouter();\n  const getGenre = async () => {\n    if (genreId.value === undefined) return;\n\n    try {\n      await request('get', `v1/music-type/${genreId.value}`);\n    } catch (err) {\n      if (err.response.status === 404) {\n        router.push({ name: 'notfound' });\n      }\n    }\n  };\n  return getGenre;\n};\n\n// 取得該曲風音樂\nconst handleGetGenreSongs = (genreId) => {\n  const data = reactive({ songs: [] });\n  const isNotExist = ref(false);\n  const getGenreSongs = async () => {\n    showLoading();\n    try {\n      const res = await request('get', 'v1/music', {\n        type: genreId.value,\n      });\n      data.songs = res.data.data;\n      isNotExist.value = !res.data.data.length;\n    } catch (err) {\n      console.log(err);\n    }\n    hideLoading();\n  };\n  const { songs } = toRefs(data);\n\n  return { getGenreSongs, songs, isNotExist };\n};\n\nexport default {\n  name: 'Genre',\n  setup() {\n    const route = useRoute();\n    const genreId = computed(() => route.params.genreId);\n    // eslint-disable-next-line global-require\n    const defaultImg = require('../assets/headphone.jpg');\n\n    const getGenre = handleGetGenre(genreId);\n    const { getGenreSongs, songs, isNotExist } = handleGetGenreSongs(genreId);\n\n    getGenre();\n    getGenreSongs();\n\n    watch(genreId, () => {\n      getGenre();\n      getGenreSongs();\n    });\n\n    return {\n      songs, genreId, isNotExist, defaultImg,\n    };\n  },\n};\n</script>\n","import { render } from \"./Genre.vue?vue&type=template&id=7ce98f38\"\nimport script from \"./Genre.vue?vue&type=script&lang=js\"\nexport * from \"./Genre.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\xampp\\\\htdocs\\\\song\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}